#include <stdio.h>
//#include <c:\Users\Desktop\teach\>
 
#define ENG 26
#define RUS 32
char filename[300];

int CheckFile(char opt) 
{   
    FILE *outfile, *infile;
    //infile = fopen(filename,"rb+");
    char Outfilename[10] = "output.txt";
   

    if ((infile = fopen(filename,"r")) == NULL) 
    { 
        printf("ERROR: Opening file\n");    
        fclose(infile);
        fclose(outfile);
        return 0;
    } 
    // else if (outfile = fopen(Outfilename,"w")) 
    // { 
    //     printf("ERROR: Create files\n"); 
    //     fclose(outfile);
    //     return 0; 
    // }

    return 1; 
} 

int encrypt (int n, char opt)
{
    FILE *fp1, *fp2;
    
    printf("Write name of inputting file:");
    scanf("%s", &filename);
    if (CheckFile(opt) == 1) 
    {
        fp1 = fopen(filename, "r");
        fp2 = fopen("output.txt", "w");
        int flag;
        char c;
        c = getc(fp1);
        while (!feof(fp1))
        {
            flag = 0; //��������� �� ������� ������
            if (c >= 'A' && c <= 'Z')
            {
                c = c + (n % ENG);
                if (c > 'Z') c = 'A' + (c - 'Z') - 1;
                fprintf (fp2, "%c", c);
                flag = 1;
            }
            if (c >= 'a' && c <= 'z')
            {
                c = c + (n % ENG);
                if (c > 'z') c = 'a' + (c - 'z') - 1;
                fprintf (fp2, "%c", c);
                flag = 1;
            }
            // if (c >= '�' && c <= '�')
            // {
            //     c = c + (n % RUS);
            //     if (c > '�') c = '�' + (c - '�') - 1;
            //     fprintf (fp2, "%c", c);
            //     flag = 1;
            // }
            // if (c>='�' && c<='�')
            // {
            //     c = c + (n % RUS);
            //     if (c > '�') c = '�' + (c - '�') - 1;
            //     fprintf (fp2, "%c", c);
            //     flag = 1;
            // }
            if (!flag) fprintf (fp2, "%c", c);
            c = getc(fp1);
        }
        fclose (fp1);
        fclose (fp2);
        return 1;
    }
    else
    {
       return 0;
    }
    
}



int decipher (int n, char opt)
{
    FILE *fp1, *fp2;

    printf("Write name of inputting file:");
    scanf("%s", &filename);
    if (CheckFile(opt) == 1) 
    {
        fp1 = fopen(filename, "r");
        fp2 = fopen("dec_output.txt", "w");
        int flag;
        char c;
        c = getc(fp1);
        while (!feof(fp1))
        {
            flag = 0;
            if (c >= 'A' && c <= 'Z')
            {
                c = c - (n % ENG);
                if (c < 'A') c = 'Z' - ('A' - c) + 1;
                fprintf (fp2, "%c", c);
                flag = 1;
            }
            if (c >= 'a' && c <= 'z')
            {
                c = c - (n % ENG);
                if (c < 'a') c = 'z' - ('a' - c) + 1;
                fprintf (fp2, "%c", c);
                flag = 1;
            }
            // if (c >= '�' && c <= '�')
            // {
            //     c = c - (n % RUS);
            //     if (c < '�') c = '�' - ('�' - c) + 1;
            //     fprintf (fp2, "%c", c);
            //     flag = 1;
            // }
            // if (c >= '�' && c <= '�')
            // {
            //     c = c - (n % RUS);
            //     if (c < '�') c = '�' - ('�' - c) + 1;
            //     fprintf (fp2, "%c", c);
            //     flag = 1;
            // }
            //if (!flag) fprintf (fp2, "%c", c);
            c = getc(fp1);
        }
    
        fclose (fp1);
        fclose (fp2);

        return 1;
    }
    else
    {
        return 0;
    }
}


int main ()
{
    //setlocale(LC_ALL,"English");
    int n, cond;
    cond = 3;
    while (cond = 3)
    {
        printf ("������� ����������� n: ");
        scanf ("%d", &n);
        getchar (); //����� ��� ����, ����� ������� ������ ������� ENTER, ������� ��� ����� ����� n
        if (n < 1) return 0;
        printf ("����� ����������� ����� ������� a, ������������ b: ");
        char c;
        scanf ("%c", &c, 1);
        if (c == 'a')
        { 
            if(encrypt(n, c) == 1)
            {
                cond = 2;
            }
        }
        if (c == 'b') 
        {
            if(decipher(n, c) == 1)
            {
                cond = 2;
            }
        }
    }
    return 0;
}

